# MLOps Configuration File
# This centralizes all project parameters for reproducibility

# Data Configuration
data:
  raw_data_path: "data/raw/housing_data.csv"
  processed_data_path: "data/processed/housing_processed.csv"
  features_data_path: "data/features/housing_features.csv"
  test_size: 0.2
  random_state: 42
  validation_split: 0.2

# Feature Engineering Configuration
features:
  numerical_features:
    - "median_income"
    - "housing_median_age"
    - "total_rooms"
    - "total_bedrooms"
    - "population"
    - "households"

  categorical_features:
    - "ocean_proximity"

  derived_features:
    - "rooms_per_household"
    - "bedrooms_per_room"
    - "population_per_household"

  scaling_method: "standard"  # Options: standard, minmax, robust

# Model Configuration
model:
  type: "random_forest"  # Options: linear_regression, random_forest, gradient_boosting
  hyperparameters:
    random_forest:
      n_estimators: 100
      max_depth: 20
      min_samples_split: 5
      min_samples_leaf: 2
      random_state: 42
      n_jobs: -1

    linear_regression:
      fit_intercept: true

    gradient_boosting:
      n_estimators: 100
      learning_rate: 0.1
      max_depth: 5
      random_state: 42

# Training Configuration
training:
  experiment_name: "housing_price_prediction"
  run_name: "baseline_model"
  tracking_uri: "file:./logs/mlruns"
  enable_mlflow: false  # Set to true when MLflow is installed

# Evaluation Metrics Configuration
evaluation:
  metrics:
    - "rmse"
    - "mae"
    - "r2_score"
    - "mape"

  threshold_rmse: 50000  # Alert if RMSE exceeds this value
  threshold_r2: 0.75     # Alert if R2 is below this value

# Model Registry Configuration
model_registry:
  save_path: "models/saved_models"
  registry_path: "models/model_registry/registry.json"
  versioning_strategy: "timestamp"  # Options: timestamp, semantic, auto_increment
  metadata_tracking: true

# Serving Configuration
serving:
  model_name: "housing_price_predictor"
  endpoint_type: "local"  # Options: local, api, cloud
  batch_prediction: true
  api_config:
    host: "0.0.0.0"
    port: 8000

# Logging Configuration
logging:
  level: "INFO"  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
  log_file: "logs/pipeline.log"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Data Quality Checks
data_quality:
  check_missing_values: true
  check_duplicates: true
  check_outliers: true
  outlier_method: "iqr"  # Options: iqr, zscore
  outlier_threshold: 3.0
